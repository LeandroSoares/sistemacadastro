name: Laravel Pipeline

# Pipeline otimizada que combina testes e análise de código
# Executa: validação do código, testes com cobertura e análise SonarCloud

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:  # Permite execução manual da pipeline

jobs:
  build-test-analyze:
    runs-on: ubuntu-latest

    steps:
      # PREPARAÇÃO DO AMBIENTE
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Necessário para análise SonarCloud

      - name: Setup PHP with Xdebug
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, gd, curl, zip, xml
          coverage: xdebug  # Habilita o suporte à cobertura de código

      # VALIDAÇÃO E INSTALAÇÃO DE DEPENDÊNCIAS
      - name: Validate composer.json and composer.lock
        run: composer validate --strict

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v3
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install Dependencies
        run: composer install --prefer-dist --no-progress

      - name: Copy .env
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Generate key
        run: php artisan key:generate

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Create Database
        run: |
          mkdir -p database
          touch database/database.sqlite

      # EXECUÇÃO DOS TESTES
      - name: Execute tests with coverage
        env:
          DB_CONNECTION: sqlite
          DB_DATABASE: database/database.sqlite
          XDEBUG_MODE: coverage  # Configura o Xdebug para gerar relatório de cobertura
        run: vendor/bin/pest --coverage-clover=coverage.xml

      # ANÁLISE DE QUALIDADE DE CÓDIGO
      - name: SonarCloud Scan
        if: success() || failure()  # Executa mesmo se os testes falharem
        uses: SonarSource/sonarqube-scan-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
